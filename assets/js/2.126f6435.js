(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{166:function(t,s,a){t.exports=a.p+"assets/img/0005-15.0378bbe6.png"},167:function(t,s,a){t.exports=a.p+"assets/img/0005-14.98c6fc2c.png"},171:function(t,s,a){t.exports=a.p+"assets/img/0005-01.5c1ad5ab.png"},172:function(t,s,a){t.exports=a.p+"assets/img/0005-02.58fb9388.png"},173:function(t,s,a){t.exports=a.p+"assets/img/0005-03.eab3b1a9.png"},174:function(t,s,a){t.exports=a.p+"assets/img/0005-04.0623e727.png"},175:function(t,s,a){t.exports=a.p+"assets/img/0005-05.bac65054.png"},176:function(t,s,a){t.exports=a.p+"assets/img/0005-06.c4d5999c.png"},177:function(t,s,a){t.exports=a.p+"assets/img/0005-07.57c52114.png"},178:function(t,s,a){t.exports=a.p+"assets/img/0005-08.1ec707ce.png"},179:function(t,s,a){t.exports=a.p+"assets/img/0005-09.77bbf745.png"},180:function(t,s,a){t.exports=a.p+"assets/img/0005-10.9f5480a8.png"},181:function(t,s,a){t.exports=a.p+"assets/img/0005-11.a1606112.png"},182:function(t,s,a){t.exports=a.p+"assets/img/0005-12.4e3eb2d4.png"},183:function(t,s,a){t.exports=a.p+"assets/img/0005-13.0a301700.png"},184:function(t,s,a){t.exports=a.p+"assets/img/0005-17.8f0353a5.png"},185:function(t,s,a){t.exports=a.p+"assets/img/0005-16.0265efd2.png"},267:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"题目：最长回文子串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目：最长回文子串","aria-hidden":"true"}},[this._v("#")]),this._v(" 题目：最长回文子串")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("给定一个字符串 "),s("code",[this._v("s")]),this._v("，找到 "),s("code",[this._v("s")]),this._v(" 中最长的回文子串。你可以假设 "),s("code",[this._v("s")]),this._v(" 的最大长度为 1000。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("示例 1")]),this._v("：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('输入: "babad"\n输出: "bab"\n注意: "aba" 也是一个有效答案。\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("示例 2")]),this._v("：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('输入: "cbbd"\n输出: "bb"\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"解题思路1：中心扩展法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解题思路1：中心扩展法","aria-hidden":"true"}},[this._v("#")]),this._v(" 解题思路1：中心扩展法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("首先要了解什么是回文串，通俗的话讲就是对称字符串，比如"),s("code",[this._v("aba")]),this._v("为回文串，"),s("code",[this._v("abba")]),this._v("也是回文串，因为它们在反转后仍然相等，即"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("str === str.reverse()")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("满足上诉条件就是回文串，而回文串又分为两种情况"),n("br"),t._v(" "),n("img",{attrs:{src:a(171),alt:"0005-01.png"}}),n("br"),t._v("\n如上图，当长度为奇数的时候中心为"),n("code",[t._v("a")]),t._v("，为偶数的时候中心是"),n("code",[t._v("a")]),t._v("和"),n("code",[t._v("a")]),t._v("的边界，因此在计算的时候就需要同时考虑两种情况"),n("br"),t._v("\n首先定义"),n("code",[t._v("start")]),t._v("和"),n("code",[t._v("maxLen")]),t._v("，"),n("code",[t._v("start")]),t._v("用于记录最长回文串起点，"),n("code",[t._v("maxLen")]),t._v("用于记录最大长度\n每次循环去执行一个函数，函数同时执行两次，传入中心点为"),n("code",[t._v("i")]),t._v("和"),n("code",[t._v("i")]),t._v("，"),n("code",[t._v("i")]),t._v("和"),n("code",[t._v("i+1")]),n("br"),t._v(" "),n("img",{attrs:{src:a(172),alt:"0005-02.png"}}),n("br"),t._v("\n如上图，以长度为奇数为例子，传入的"),n("code",[t._v("i")]),t._v("和"),n("code",[t._v("i")]),t._v("分别当作"),n("code",[t._v("l")]),t._v("和"),n("code",[t._v("r")]),t._v("，当"),n("code",[t._v("s[l]===s[r]")]),t._v("时，"),n("code",[t._v("l")]),t._v("移动至前一位，"),n("code",[t._v("r")]),t._v("移动至后一位，如下图\n"),n("img",{attrs:{src:a(173),alt:"0005-03.png"}}),n("br"),t._v("\n继续比较"),n("code",[t._v("s[l]")]),t._v("和"),n("code",[t._v("s[r]")]),t._v("，相等则继续移动,如下图\n"),n("img",{attrs:{src:a(174),alt:"0005-04.png"}}),n("br"),t._v("\n继续比较,"),n("code",[t._v("s[l]!==s[r]")]),t._v("，退出循环"),n("br"),t._v("\n然后与"),n("code",[t._v("maxLen")]),t._v("与"),n("code",[t._v("r-l-1")]),t._v("比较，如果后者更大则更新"),n("code",[t._v("maxLen")]),t._v("，同时更新"),n("code",[t._v("start")]),t._v("为"),n("code",[t._v("l+1")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"解题思路2：manacher算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解题思路2：manacher算法","aria-hidden":"true"}},[this._v("#")]),this._v(" 解题思路2：Manacher算法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("[Manacher(1975)] 发现了一种线性时间算法，可以在列出给定字符串中从字符串头部开始的所有回文。并且，Apostolico, Breslauer & Galil (1995) 发现，同样的算法也可以在任意位置查找全部最大回文子串，并且时间复杂度是线性的。因此，他们提供了一种时间复杂度为线性的最长回文子串解法。替代性的线性时间解决 Jeuring (1994), Gusfield (1997)提供的，基于后缀树(suffix trees)。也存在已知的高效并行算法。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v('Manacher(又称"马拉车")算法对比中心扩展法来看更可以认为是一种结合kmp的优化版，对比中心扩展法时间复杂度是'),s("code",[this._v("O(n^2)")]),this._v(",马拉车算法时间复杂度为"),s("code",[this._v("O(n)")]),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"第1步：添加分隔符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第1步：添加分隔符","aria-hidden":"true"}},[this._v("#")]),this._v(" 第1步：添加分隔符")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("中心扩展法需要同时计算奇数长度和偶数长度的中心，马拉车算法开始计算前在字符串中插入分隔符"),s("code",[this._v("#")]),this._v(",就可以把奇数长度和偶数长度的字符串全部整合为一种情况，如下:"),s("br"),this._v("\n比如：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("奇数长度："),a("code",[t._v("bbbabbc")]),t._v(" =====> "),a("code",[t._v("#b#b#b#a#b#b#c#")]),a("br")]),t._v(" "),a("li",[t._v("偶数长度："),a("code",[t._v("cbbabb")]),t._v(" =====> "),a("code",[t._v("#c#b#b#a#b#b#")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("为什么需要加分隔符呢，简单做个计算：假如字符串长度是"),s("code",[this._v("len")]),this._v(",在每个字符前添加一个分隔符长度就会变为"),s("code",[this._v("2*len")]),this._v("，在字符串最后再加一个分隔符，长度就变为"),s("code",[this._v("2*len+1")]),this._v("，这样就确保字符串长度始终为奇数，可以不考虑之前偶数长度情况,往后计算会更加方便"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"第2步：建立p数组，得到任意字符串回文半径长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第2步：建立p数组，得到任意字符串回文半径长度","aria-hidden":"true"}},[this._v("#")]),this._v(" 第2步：建立p数组，得到任意字符串回文半径长度")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("建立p数组的意义在于得到任意字符串回文半径长度，因为每一个字符串本身都个可以看作是一个回文字符，而较前位置的回文字符半径会被较后位置的回文字符复用(由于回文字符性质，前半部分存在的回文字符在后半部分同样存在)，因此复用半径可以直接减少"),s("code",[this._v("while")]),this._v("循环次数，直接降低时间复杂度"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("以"),s("code",[this._v("cbbabb")]),this._v("为例，先画出下面的表格"),s("br"),this._v(" "),s("img",{attrs:{src:a(175),alt:"0005-05.png"}}),s("br"),this._v("\n首先定义如何计算回文半径：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("从字符串开始计算，以当前扩展点为中心，最小半径为1，然后同时往左右进行中心扩展，直至不能扩展为止"),s("br")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("首先计算"),n("code",[t._v("str[0]")]),t._v("，初始半径为1，然后进行中心扩展，结果都到了边界，因此"),n("code",[t._v("str[0]")]),t._v("半径为1"),n("br"),t._v(" "),n("img",{attrs:{src:a(176),alt:"0005-06.png"}}),n("br"),t._v("\n计算"),n("code",[t._v("str[1]")]),t._v("，同样初始化半径后中心扩展，"),n("code",[t._v("str[0]=str[2]")]),t._v("，半径加1，继续扩展到达边界"),n("br"),t._v(" "),n("img",{attrs:{src:a(177),alt:"0005-07.png"}}),n("br"),t._v("\n计算"),n("code",[t._v("str[2]")]),t._v("，左右扩展后到达边界"),n("br"),t._v(" "),n("img",{attrs:{src:a(178),alt:"0005-08.png"}}),n("br"),t._v("\n计算"),n("code",[t._v("str[3]")]),t._v("，左右扩展匹配，半径加1，继续扩展到达边界"),n("br"),t._v(" "),n("img",{attrs:{src:a(179),alt:"0005-09.png"}}),n("br"),t._v("\n计算"),n("code",[t._v("str[4]")]),t._v("，左右扩展匹配，半径加1，继续扩展匹配，加1，继续扩展到达边界\n"),n("img",{attrs:{src:a(180),alt:"0005-10.png"}}),n("br"),t._v("\n最终计算完的p数组:"),n("br"),t._v(" "),n("img",{attrs:{src:a(181),alt:"0005-11.png"}}),n("br"),t._v("\np-1数组"),n("br"),t._v(" "),n("img",{attrs:{src:a(182),alt:"0005-12.png"}}),n("br"),t._v("\n为什么还要p-1数组呢，这里简单分析下:"),n("br"),t._v("\n1.已知长度为"),n("code",[t._v("n")]),t._v("的回文串添加分隔符后长度为"),n("code",[t._v("2n+1")]),n("br"),t._v("\n2.假设上面计算的中心半径为"),n("code",[t._v("p")]),t._v("，那么容易得出"),n("code",[t._v("2p-1")]),t._v(" = "),n("code",[t._v("2n+1")]),n("br"),t._v("\n3.通过2可以算出"),n("code",[t._v("p = n+1 ===> p-1 = n")]),t._v(",因此得到p-1数组即为回文串长度数组")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"第3步：如何在代码中计算p数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第3步：如何在代码中计算p数组","aria-hidden":"true"}},[this._v("#")]),this._v(" 第3步：如何在代码中计算p数组")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以下图片为了方便理解把#符都省略掉")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在第2步里介绍了马拉车算法核心在于复用回文串长度，在了解如何复用前先看下图:"),s("br"),this._v(" "),s("img",{attrs:{src:a(183),alt:"0005-13.png"}}),s("br"),this._v("\n从上图容易获得三个关键信息:"),s("br")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("i")]),t._v("和"),n("code",[t._v("j")]),t._v("是关于"),n("code",[t._v("cid")]),t._v("中心对称的，容易得出"),n("code",[t._v("j")]),t._v("="),n("code",[t._v("2*cid - id")]),t._v("的性质"),n("br")]),t._v(" "),n("li",[t._v("假设"),n("code",[t._v("mR")]),t._v("为最长回文串的最右边界，那么容易得出"),n("code",[t._v("cid+p[cid]-1 = mR")]),n("br")]),t._v(" "),n("li",[t._v("假设以"),n("code",[t._v("i")]),t._v("为中心的字符串也是回文串且长度不超过"),n("code",[t._v("mR")]),t._v("，那么根据上图可以得出"),n("code",[t._v("i+p[i]-1<=mR")]),n("br"),t._v("\n通过以上三个性质，先去计算最简单的一种情况:"),n("br")]),t._v(" "),n("li",[t._v("假如"),n("code",[t._v("i<mR")]),t._v("，那么就可以考虑复用原则:"),n("br"),t._v(" "),n("ul",[n("li",[t._v("假如以"),n("code",[t._v("j")]),t._v("为中心的回文串长度不超过"),n("code",[t._v("cId")]),t._v("的半径,那么"),n("code",[t._v("p[i]=p[2*cid-j]")]),t._v("是成立的，如下图："),n("br"),t._v(" "),n("img",{attrs:{src:a(166),alt:"0005-15.png"}}),n("br")]),t._v(" "),n("li",[t._v("假如以"),n("code",[t._v("j")]),t._v("为中心的回文串长度超过左边界，大概情况如下图:"),n("br"),t._v(" "),n("img",{attrs:{src:a(167),alt:"0005-14.png"}}),n("br"),t._v("\n从上图可以看出"),n("code",[t._v("j")]),t._v("的半径明显要比"),n("code",[t._v("i")]),t._v("要大，因此"),n("code",[t._v("p[i]=p[2*cid-j]")]),t._v("明显不成立，但是由于"),n("code",[t._v("j")]),t._v("半径已经越过左边界，根据对称原则"),n("code",[t._v("i")]),t._v("的右边界可以到达右边界"),n("code",[t._v("mR")]),t._v("，也就是说可以得出"),n("code",[t._v("p[i]=mR-i+1")]),n("br")])])]),t._v(" "),n("li",[t._v("假如"),n("code",[t._v("i>mR")]),t._v("，这就简单了，赋值当前半径为1，继续使用中心扩展去左右扩展匹配"),n("br")]),t._v(" "),n("li",[t._v("根据以上两点，总结出以下代码:"),n("br"),t._v(" "),n("code",[t._v("p[i] = i < mR ? Math.min(p[2 * cId - i], mR - i + 1) : 1;")]),n("br")]),t._v(" "),n("li",[t._v("当计算完"),n("code",[t._v("p[i]")]),t._v("后就要判断当前"),n("code",[t._v("i")]),t._v("的半径是否超过"),n("code",[t._v("mR")]),t._v("，超过则更新"),n("code",[t._v("mR")]),t._v("和"),n("code",[t._v("cid")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"时间复杂度分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度分析","aria-hidden":"true"}},[this._v("#")]),this._v(" 时间复杂度分析")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("为什么说Manacher的时间复杂度是"),s("code",[this._v("O(n)")]),this._v("，下面可以分析下")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("假设字符串长度为"),s("code",[this._v("n")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" slen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" mostR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" cId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mostR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" slen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当"),s("code",[this._v("i<mR")]),this._v("：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("当"),n("code",[t._v("p[mR-i+1]!=p[j]")]),t._v("时，"),n("code",[t._v("p[i]")]),t._v("都是可以马上得到的，因为进入while循环后就会退出，时间复杂度是"),n("code",[t._v("O(1)")]),t._v("，为什么是"),n("code",[t._v("O(1)")]),t._v("，分两种情况讨论，如下：\n"),n("ul",[n("li",[n("code",[t._v("p[mR-i+1]>p[j]")]),t._v("时，如下图：\n"),n("img",{attrs:{src:a(166),alt:"0005-15.png"}}),n("br"),t._v("\n这种情况"),n("code",[t._v("p[j]")]),t._v("小于"),n("code",[t._v("p[mR-i+1]")]),t._v("，所以"),n("code",[t._v("p[i]")]),t._v("会直接取"),n("code",[t._v("p[j]")]),t._v("的值，进入while循环后也不会继续计算")]),t._v(" "),n("li",[n("code",[t._v("p[mR-i+1]<p[j]")]),t._v("，如下图：\n"),n("img",{attrs:{src:a(167),alt:"0005-14.png"}}),n("br"),t._v("\n而这种同理，虽然右子串"),n("code",[t._v("childR")]),t._v("到达"),n("code",[t._v("mR")]),t._v("，但是进入while循环就会退出，因为如果可以继续计算的话大概就是下面这样\n"),n("img",{attrs:{src:a(184),alt:"0005-17.png"}}),n("br"),t._v("\n但其实这种情况是不可能出现的，因为这个时候"),n("code",[t._v("mR")]),t._v("早已是最右侧的"),n("code",[t._v("k")]),t._v("，也就是"),n("code",[t._v("p[mR-i+1]=p[j]")])])])]),t._v(" "),n("li",[t._v("当"),n("code",[t._v("p[mR-i+1]=p[j]")]),t._v("时，进入while循环后会继续匹配，开始匹配的位置是"),n("code",[t._v("str[i+p[i]]")]),t._v("和"),n("code",[t._v("str[i-p[i]]")]),t._v("，因为"),n("code",[t._v("i+p[i]=mR+1")]),t._v("，也就是匹配从"),n("code",[t._v("mR")]),t._v("的下一位开始，而匹配结束时停止的位置是"),n("code",[t._v("mR'")]),t._v("，时间复杂度是"),n("code",[t._v("O(mR'-mR)")]),t._v(" "),n("ul",[n("li",[t._v("这里要注意当每次"),n("code",[t._v("i<mR")]),t._v("&&"),n("code",[t._v("p[mR-i+1]===p[j]")]),t._v("时进入while循环，而"),n("code",[t._v("mR")]),t._v("是一直往后移动的，所以"),n("code",[t._v("mR")]),t._v("小于等于"),n("code",[t._v("n")]),t._v("，全部while循环加起来最多走过"),n("code",[t._v("n")]),t._v("次\n"),n("img",{attrs:{src:a(185),alt:"0005-16.png"}}),n("br")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当"),s("code",[this._v("i>mR")]),this._v("，直接进入while循环，同理最多全部循环最多"),s("code",[this._v("n")]),this._v("次，时间复杂度最大为"),s("code",[this._v("O(n)")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("总结来说while循环是对mR进行扩展，如果说最长回文串到达N，那全部while循环加起来最多执行N次，因此Manacher算法时间复杂度为"),s("code",[this._v("On")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"代码实现：中心扩展法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现：中心扩展法","aria-hidden":"true"}},[this._v("#")]),this._v(" 代码实现：中心扩展法")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("longestPalindrome")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maxLen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("extendPalindrome")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            r"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxLen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            maxLen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extendPalindrome")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extendPalindrome")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" maxLen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"代码实现：manacher算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现：manacher算法","aria-hidden":"true"}},[this._v("#")]),this._v(" 代码实现：Manacher算法")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("longestPalindrome")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`#")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" slen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("slen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        mostR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        cId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        palLen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        palStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" slen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" mostR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" cId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mostR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" slen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mostR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            mostR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            cId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" palLen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            palLen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            palStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/#/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" palStr\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])}],e=a(0),r=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),a("p",[t._v("来源：力扣（LeetCode）"),a("br"),t._v("\n链接："),a("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-palindromic-substring/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://leetcode-cn.com/problems/longest-palindromic-substring/"),a("OutboundLink")],1)]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),a("p",[t._v("Manacher算法简介")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),a("p",[t._v("首先把Manacher的核心代码提炼出来大概就是下面这段了")]),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._m(36),t._v(" "),t._m(37)])},n,!1,null,null,null);s.default=r.exports}}]);